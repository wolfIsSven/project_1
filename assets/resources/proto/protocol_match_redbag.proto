package protocol;

enum MatchRedbagProtoType {
     C_2_S_MATCH_REDBAG_LOAD          = 1201;
     S_2_C_MATCH_REDBAG_LOAD          = 1202;
     C_2_S_MATCH_REDBAG_ENROLL        = 1203;
     S_2_C_MATCH_REDBAG_ENROLL        = 1204;
     C_2_S_MATCH_REDBAG_EXIT          = 1205;
     S_2_C_MATCH_REDBAG_EXIT          = 1206;

     S_2_C_MATCH_REDBAG_STATE         = 1222;
}

message C2S_MatchRedbagLoad {
        optional MatchRedbagProtoType type = 1 [default = C_2_S_MATCH_REDBAG_LOAD];
        optional int32 unique_id = 2;
        optional int32 rule_type = 3;
        optional int32 room_type = 4;
}

message RedbagMatch {
        required int32 xml_id = 1;
        optional int32 cur_nums = 2;
}
message S2C_MatchRedbagLoad {
        optional MatchRedbagProtoType type = 1 [default = S_2_C_MATCH_REDBAG_LOAD];
        required int32 ret = 2;
        optional int32 rule_type = 3;
        repeated RedbagMatch matchs = 4;
        optional int32 belong_match_id = 5;
}

message C2S_MatchRedbagEnroll {
        optional MatchRedbagProtoType type = 1 [default = C_2_S_MATCH_REDBAG_ENROLL];
        optional int32 unique_id = 2;
        optional int32 xml_id = 3;
        optional int32 cost_type = 4;
        optional int32 rule_type = 5;
        optional int32 room_type = 6;
}

message S2C_MatchRedbagEnroll {
        optional MatchRedbagProtoType type = 1 [default = S_2_C_MATCH_REDBAG_ENROLL];
        required int32 ret = 2;
        optional int32 xml_id = 3;
        optional int32 rule_type = 4;
}

message C2S_MatchRedbagExit {
        optional MatchRedbagProtoType type = 1 [default = C_2_S_MATCH_REDBAG_EXIT];
        optional int32 unique_id = 2;
        optional int32 room_type = 3;
}

message S2C_MatchRedbagExit {
        optional MatchRedbagProtoType type = 1 [default = S_2_C_MATCH_REDBAG_EXIT];
        required int32 ret = 2;
}

message RedbagMatchReward {
        optional int32 type = 1;
        optional int32 value = 2;
        optional int32 nums = 3;
}

message S2C_MatchRedbagState {
        optional MatchRedbagProtoType type = 1 [default = S_2_C_MATCH_REDBAG_STATE];
        required int32 ret = 2;
        optional int32 id = 3;
        optional int32 xml_id = 4;
        optional int32 rule_type = 5;
        optional int32 state = 6;
        optional int32 seq = 7;
        optional int32 rank = 8;
        repeated RedbagMatchReward rewards = 9;
}